exports[`test will have a error action 1`] = `
Object {
  "meta": Object {
    "id": "resourceId",
    "reduxResourcesActionType": "PARTIAL_UPDATE_RESOURCE_REQUEST_ERROR",
    "resource": "mockResources",
    "timestamp": "2016-01-01T00:00:00.000Z",
  },
  "payload": Array [
    "This is an initial error",
    "This is another error",
  ],
  "type": "PARTIAL_UPDATE_MOCK_RESOURCES_REQUEST_ERROR",
}
`;

exports[`test will have a error action with previous info if its an optimistic update 1`] = `
Object {
  "meta": Object {
    "id": "resourceId",
    "isOptimisticUpdate": true,
    "reduxResourcesActionType": "PARTIAL_UPDATE_RESOURCE_REQUEST_ERROR",
    "replacedLastUpdatedAt": null,
    "replacedResource": Object {
      "id": "resourceId",
      "prop1": "initial prop1",
      "prop2": "initial prop2",
      "relatedResource": "relatedResourceId",
    },
    "resource": "mockResources",
    "timestamp": "2016-01-01T00:00:00.000Z",
  },
  "payload": Array [
    "This is an initial error",
    "This is another error",
  ],
  "type": "PARTIAL_UPDATE_MOCK_RESOURCES_REQUEST_ERROR",
}
`;

exports[`test will have a success action 1`] = `
Object {
  "meta": Object {
    "id": "resourceId",
    "normalizedResponse": Object {
      "entities": Object {
        "mockResources": Object {
          "resourceId": Object {
            "id": "resourceId",
            "prop1": "initial prop1",
            "prop2": "UPDATED PROP_1",
            "relatedResource": "relatedResourceId",
          },
        },
        "relatedMockResources": Object {
          "relatedResourceId": Object {
            "id": "relatedResourceId",
            "relatedProp1": "initial relatedProp1",
          },
        },
      },
      "result": Array [
        "resourceId",
      ],
    },
    "reduxResourcesActionType": "PARTIAL_UPDATE_RESOURCE_REQUEST_SUCCESS",
    "resource": "mockResources",
    "timestamp": "2016-01-01T00:00:00.000Z",
  },
  "payload": Object {
    "id": "resourceId",
    "prop1": "initial prop1",
    "prop2": "UPDATED PROP_1",
    "relatedResource": Object {
      "id": "relatedResourceId",
      "relatedProp1": "initial relatedProp1",
    },
  },
  "type": "PARTIAL_UPDATE_MOCK_RESOURCES_REQUEST_SUCCESS",
}
`;

exports[`test will have an initial action 1`] = `
Object {
  "meta": Object {
    "id": "resourceId",
    "reduxResourcesActionType": "PARTIAL_UPDATE_RESOURCE_REQUEST",
    "resource": "mockResources",
    "timestamp": "2016-01-01T00:00:00.000Z",
  },
  "payload": "resourceId",
  "type": "PARTIAL_UPDATE_MOCK_RESOURCES_REQUEST",
}
`;
